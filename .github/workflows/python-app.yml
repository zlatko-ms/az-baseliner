# # This workflow will install Python dependencies, run tests and lint with a single version of Python
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

# name: build python application

# on:
#   push:
#     branches: [ "main" ]
#     paths-ignore:
#       - 'README.md'
#   pull_request:
#     branches: [ "main" ]
#     paths-ignore:
#       - 'README.md'
 
# permissions:
#   contents: read

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:

#     - name: Checkout project sources
#       uses: actions/checkout@v3

#     - name: Declare project variables
#       run: |
#         for l in `cat PROJECTVARS.cfg`; do v=$(echo $l | tr -d \n) ; echo $v >> $GITHUB_ENV ; done

#     - name: Convert all sources to Unix format
#       run: |
#         sudo apt-get install -y dos2unix
#         find . -type f -name "*.py" | xargs dos2unix

#     - name: Setup Python ${{ env.PYTHON_VERSION }} interpreter
#       uses: actions/setup-python@v3
#       with:
#         python-version: ${{ env.PYTHON_VERSION }}

#     - name: Setup Python dependency modules
#       run: |
#         python -m pip install --upgrade pip
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

#     - name: Formatting Python source files via black
#       run: |
#         python -m black .

#     - name: Checking Python source files via flake8
#       run: |
#         python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         python -m flake8 . --count --extend-ignore=F811,E266,E203 --max-complexity=12 --statistics

#     - name: Run Python Unit Tests
#       run: |
#         make unit-tests

